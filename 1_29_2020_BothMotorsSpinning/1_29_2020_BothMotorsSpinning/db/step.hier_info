|step
pin_name1 <= stepper_ctrl:inst.stby
pin_name => p11:inst1.inclk0
pin_name8 => stepper_ctrl:inst.button
arduino_clk => spi_slave:inst4.sclk
arduino_slave_select => spi_slave:inst4.ss_n
arduino_bitstream => spi_slave:inst4.mosi
pin_name2 <= stepper_ctrl:inst.ain1
pin_name3 <= stepper_ctrl:inst.ain2
pin_name4 <= stepper_ctrl:inst.bin1
pin_name5 <= stepper_ctrl:inst.bin2
pin_name6 <= stepper_ctrl:inst.pwma
pin_name7 <= stepper_ctrl:inst.pwmb
pin_name9 <= stepper_ctrl:inst.stby2
pin_name10 <= stepper_ctrl:inst.ain2_1
pin_name11 <= stepper_ctrl:inst.ain2_2
pin_name12 <= stepper_ctrl:inst.bin2_1
pin_name13 <= stepper_ctrl:inst.bin2_2
pin_name14 <= stepper_ctrl:inst.pwma2
pin_name15 <= stepper_ctrl:inst.pwmb2
pin_name16 <= spi_slave:inst4.miso
pin_name18 <= stepper_ctrl:inst.led2
pin_name19 <= stepper_ctrl:inst.led1
pin_name20 <= stepper_ctrl:inst.led0
rx_req_out <= stepper_ctrl:inst.rx_req
rrdy_out <= spi_slave:inst4.rrdy


|step|stepper_ctrl:inst
clk50M => current_angle[0].CLK
clk50M => current_angle[1].CLK
clk50M => current_angle[2].CLK
clk50M => current_angle[3].CLK
clk50M => current_angle[4].CLK
clk50M => current_angle[5].CLK
clk50M => current_angle[6].CLK
clk50M => current_angle[7].CLK
clk50M => count[0].CLK
clk50M => count[1].CLK
clk50M => count[2].CLK
clk50M => count[3].CLK
clk50M => count[4].CLK
clk50M => count[5].CLK
clk50M => count[6].CLK
clk50M => count[7].CLK
clk50M => count[8].CLK
clk50M => count[9].CLK
clk50M => count[10].CLK
clk50M => count[11].CLK
clk50M => count[12].CLK
clk50M => count[13].CLK
clk50M => count[14].CLK
clk50M => count[15].CLK
clk50M => count[16].CLK
clk50M => count[17].CLK
clk50M => count[18].CLK
clk50M => count[19].CLK
clk50M => count[20].CLK
clk50M => count[21].CLK
clk50M => count[22].CLK
clk50M => count[23].CLK
clk50M => count[24].CLK
clk50M => count[25].CLK
clk50M => count[26].CLK
clk50M => count[27].CLK
clk50M => count[28].CLK
clk50M => count[29].CLK
clk50M => count[30].CLK
clk50M => count[31].CLK
clk50M => switched.CLK
clk50M => motor2[0].CLK
clk50M => motor2[1].CLK
clk50M => motor2[2].CLK
clk50M => motor2[3].CLK
clk50M => motors[0].CLK
clk50M => motors[1].CLK
clk50M => motors[2].CLK
clk50M => motors[3].CLK
clk50M => steps_to_move[0].CLK
clk50M => steps_to_move[1].CLK
clk50M => steps_to_move[2].CLK
clk50M => steps_to_move[3].CLK
clk50M => steps_to_move[4].CLK
clk50M => steps_to_move[5].CLK
clk50M => steps_to_move[6].CLK
clk50M => steps_to_move[7].CLK
clk50M => clicks[0].CLK
clk50M => clicks[1].CLK
clk50M => clicks[2].CLK
clk50M => clicks[3].CLK
clk50M => clicks[4].CLK
clk50M => clicks[5].CLK
clk50M => clicks[6].CLK
clk50M => clicks[7].CLK
clk50M => quotient[0].CLK
clk50M => quotient[1].CLK
clk50M => quotient[2].CLK
clk50M => quotient[3].CLK
clk50M => quotient[4].CLK
clk50M => quotient[5].CLK
clk50M => quotient[6].CLK
clk50M => quotient[7].CLK
clk50M => rx_req~reg0.CLK
button => ~NO_FANOUT~
angle[0] => quotient.DATAB
angle[1] => quotient.DATAB
angle[2] => quotient.DATAB
angle[3] => quotient.DATAB
angle[4] => quotient.DATAB
angle[5] => quotient.DATAB
angle[5] => led0.DATAIN
angle[6] => quotient.DATAB
angle[6] => led1.DATAIN
angle[7] => quotient.DATAB
angle[7] => led2.DATAIN
rrdy => quotient.OUTPUTSELECT
rrdy => quotient.OUTPUTSELECT
rrdy => quotient.OUTPUTSELECT
rrdy => quotient.OUTPUTSELECT
rrdy => quotient.OUTPUTSELECT
rrdy => quotient.OUTPUTSELECT
rrdy => quotient.OUTPUTSELECT
rrdy => quotient.OUTPUTSELECT
rrdy => rx_req~reg0.DATAIN
rx_req <= rx_req~reg0.DB_MAX_OUTPUT_PORT_TYPE
stby <= <VCC>
ain1 <= motors[3].DB_MAX_OUTPUT_PORT_TYPE
ain2 <= motors[2].DB_MAX_OUTPUT_PORT_TYPE
bin1 <= motors[1].DB_MAX_OUTPUT_PORT_TYPE
bin2 <= motors[0].DB_MAX_OUTPUT_PORT_TYPE
pwma <= <VCC>
pwmb <= <VCC>
stby2 <= <VCC>
ain2_1 <= motor2[3].DB_MAX_OUTPUT_PORT_TYPE
ain2_2 <= motor2[2].DB_MAX_OUTPUT_PORT_TYPE
bin2_1 <= motor2[1].DB_MAX_OUTPUT_PORT_TYPE
bin2_2 <= motor2[0].DB_MAX_OUTPUT_PORT_TYPE
pwma2 <= <VCC>
pwmb2 <= <VCC>
led2 <= angle[7].DB_MAX_OUTPUT_PORT_TYPE
led1 <= angle[6].DB_MAX_OUTPUT_PORT_TYPE
led0 <= angle[5].DB_MAX_OUTPUT_PORT_TYPE


|step|p11:inst1
inclk0 => sub_wire3[0].IN1
c0 <= altpll:altpll_component.clk


|step|p11:inst1|altpll:altpll_component
inclk[0] => pll.CLK
inclk[1] => ~NO_FANOUT~
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= <GND>
clk[2] <= <GND>
clk[3] <= <GND>
clk[4] <= <GND>
clk[5] <= <GND>
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= <GND>
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= sclkout1.DB_MAX_OUTPUT_PORT_TYPE
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|step|spi_slave:inst4
sclk => miso~reg0.CLK
sclk => miso~en.CLK
sclk => tx_buf[0].CLK
sclk => tx_buf[1].CLK
sclk => tx_buf[2].CLK
sclk => tx_buf[3].CLK
sclk => tx_buf[4].CLK
sclk => tx_buf[5].CLK
sclk => tx_buf[6].CLK
sclk => tx_buf[7].CLK
sclk => bit_cnt[0].CLK
sclk => bit_cnt[1].CLK
sclk => bit_cnt[2].CLK
sclk => bit_cnt[3].CLK
sclk => bit_cnt[4].CLK
sclk => bit_cnt[5].CLK
sclk => bit_cnt[6].CLK
sclk => bit_cnt[7].CLK
sclk => bit_cnt[8].CLK
sclk => bit_cnt[9].CLK
sclk => bit_cnt[10].CLK
sclk => bit_cnt[11].CLK
sclk => bit_cnt[12].CLK
sclk => bit_cnt[13].CLK
sclk => bit_cnt[14].CLK
sclk => bit_cnt[15].CLK
sclk => bit_cnt[16].CLK
sclk => trdy~reg0.CLK
sclk => rrdy~reg0.CLK
sclk => roe~reg0.CLK
sclk => rd_add.CLK
sclk => rx_buf[7].CLK
sclk => rx_buf[6].CLK
sclk => rx_buf[5].CLK
sclk => rx_buf[4].CLK
sclk => rx_buf[3].CLK
sclk => rx_buf[2].CLK
sclk => rx_buf[1].CLK
sclk => rx_buf[0].CLK
sclk => wr_add.CLK
reset_n => tx_buf[0].IN1
reset_n => rx_data[0]$latch.ACLR
reset_n => rx_data[1]$latch.ACLR
reset_n => rx_data[2]$latch.ACLR
reset_n => rx_data[3]$latch.ACLR
reset_n => rx_data[4]$latch.ACLR
reset_n => rx_data[5]$latch.ACLR
reset_n => rx_data[6]$latch.ACLR
reset_n => rx_data[7]$latch.ACLR
reset_n => process_1.IN1
reset_n => process_1.IN1
reset_n => process_1.IN1
reset_n => process_0.IN0
reset_n => tx_buf[0].ACLR
reset_n => tx_buf[1].ACLR
reset_n => tx_buf[2].ACLR
reset_n => tx_buf[3].ACLR
reset_n => tx_buf[4].ACLR
reset_n => tx_buf[5].ACLR
reset_n => tx_buf[6].ACLR
reset_n => tx_buf[7].ACLR
reset_n => rx_buf[0].ACLR
reset_n => rx_buf[1].ACLR
reset_n => rx_buf[2].ACLR
reset_n => rx_buf[3].ACLR
reset_n => rx_buf[4].ACLR
reset_n => rx_buf[5].ACLR
reset_n => rx_buf[6].ACLR
reset_n => rx_buf[7].ACLR
ss_n => process_0.IN1
ss_n => process_1.IN0
ss_n => process_1.IN1
ss_n => process_1.IN1
ss_n => process_1.IN0
ss_n => process_1.IN0
ss_n => busy.DATAIN
mosi => trdy.DATAB
mosi => rrdy.DATAB
mosi => roe.DATAB
mosi => rd_add.DATAIN
mosi => rx_buf[7].DATAIN
mosi => rx_buf[6].DATAIN
mosi => rx_buf[5].DATAIN
mosi => rx_buf[4].DATAIN
mosi => rx_buf[3].DATAIN
mosi => rx_buf[2].DATAIN
mosi => rx_buf[1].DATAIN
mosi => rx_buf[0].DATAIN
mosi => wr_add.DATAIN
rx_req => process_1.IN1
rx_req => process_1.IN1
st_load_en => process_1.IN1
st_load_en => process_1.IN0
st_load_en => process_1.IN0
st_load_trdy => process_1.IN1
st_load_trdy => process_1.IN1
st_load_rrdy => process_1.IN1
st_load_rrdy => process_1.IN1
st_load_roe => process_1.IN1
st_load_roe => process_1.IN1
tx_load_en => process_1.IN1
tx_load_en => process_1.IN1
tx_load_data[0] => tx_buf[0].ADATA
tx_load_data[1] => tx_buf[1].ADATA
tx_load_data[2] => tx_buf[2].ADATA
tx_load_data[3] => tx_buf[3].ADATA
tx_load_data[4] => tx_buf[4].ADATA
tx_load_data[5] => tx_buf[5].ADATA
tx_load_data[6] => tx_buf[6].ADATA
tx_load_data[7] => tx_buf[7].ADATA
trdy <= trdy~reg0.DB_MAX_OUTPUT_PORT_TYPE
rrdy <= rrdy~reg0.DB_MAX_OUTPUT_PORT_TYPE
roe <= roe~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[0] <= rx_data[0]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= rx_data[1]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= rx_data[2]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= rx_data[3]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= rx_data[4]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= rx_data[5]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= rx_data[6]$latch.DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= rx_data[7]$latch.DB_MAX_OUTPUT_PORT_TYPE
busy <= ss_n.DB_MAX_OUTPUT_PORT_TYPE
miso <= miso.DB_MAX_OUTPUT_PORT_TYPE


